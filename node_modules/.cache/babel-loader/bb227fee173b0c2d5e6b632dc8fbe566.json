{"remainingRequest":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/babel-loader/lib/index.js!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-svg-inline-loader/dist/index.min.js!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/src/views/pages/vue-bootstrap/FormInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/src/views/pages/vue-bootstrap/FormInput.vue","mtime":1581642016000},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/babel-loader/lib/index.js","mtime":1587476708600},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vuetify-loader/lib/loader.js","mtime":1588922639593},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-loader/lib/index.js","mtime":1588841263729},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-svg-inline-loader/dist/index.min.js","mtime":1588922639533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBLVENvZGVQcmV2aWV3IGZyb20gIkAvdmlld3MvcGFydGlhbHMvY29udGVudC9Db2RlUHJldmlldy52dWUiOwppbXBvcnQgeyBTRVRfQlJFQURDUlVNQiB9IGZyb20gIkAvc3RvcmUvYnJlYWRjcnVtYnMubW9kdWxlIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBodG1sMTogIjxkaXY+XG4gICAgPGItZm9ybS1pbnB1dCB2LW1vZGVsPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgeW91ciBuYW1lXCI+PC9iLWZvcm0taW5wdXQ+XG4gICAgPGRpdiBjbGFzcz1cIm10LTJcIj5WYWx1ZToge3sgdGV4dCB9fTwvZGl2PlxuICA8L2Rpdj4iLAogICAgICBqczE6ICJleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRleHQ6ICcnXG4gICAgICB9XG4gICAgfVxuICB9IiwKICAgICAgdGV4dDogIiIsCiAgICAgIGh0bWwyOiAiPGItY29udGFpbmVyIGZsdWlkPlxuIiArICcgICAgPGItcm93IGNsYXNzPSJteS0xIiB2LWZvcj0idHlwZSBpbiB0eXBlcyIgOmtleT0idHlwZSI+XG4nICsgJyAgICAgIDxiLWNvbCBzbT0iMyI+XG4nICsgJyAgICAgICAgPGxhYmVsIDpmb3I9ImB0eXBlLSR7dHlwZX1gIj5UeXBlIHt7IHR5cGUgfX06PC9sYWJlbD5cbicgKyAiICAgICAgPC9iLWNvbD5cbiIgKyAnICAgICAgPGItY29sIHNtPSI5Ij5cbicgKyAnICAgICAgICA8Yi1mb3JtLWlucHV0IDppZD0iYHR5cGUtJHt0eXBlfWAiIDp0eXBlPSJ0eXBlIj48L2ItZm9ybS1pbnB1dD5cbicgKyAiICAgICAgPC9iLWNvbD5cbiIgKyAiICAgIDwvYi1yb3c+XG4iICsgIiAgPC9iLWNvbnRhaW5lcj4iLAogICAgICBqczI6ICJleHBvcnQgZGVmYXVsdCB7XG4gICAgZGF0YSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGVzOiBbXG4gICAgICAgICAgJ3RleHQnLFxuICAgICAgICAgICdwYXNzd29yZCcsXG4gICAgICAgICAgJ2VtYWlsJyxcbiAgICAgICAgICAnbnVtYmVyJyxcbiAgICAgICAgICAndXJsJyxcbiAgICAgICAgICAndGVsJyxcbiAgICAgICAgICAnZGF0ZScsXG4gICAgICAgICAgYHRpbWVgLFxuICAgICAgICAgICdyYW5nZScsXG4gICAgICAgICAgJ2NvbG9yJ1xuICAgICAgICBdXG4gICAgICB9XG4gICAgfVxuICB9IiwKICAgICAgdHlwZXM6IFsidGV4dCIsICJwYXNzd29yZCIsICJlbWFpbCIsICJudW1iZXIiLCAidXJsIiwgInRlbCIsICJkYXRlIiwgInRpbWUiLCAicmFuZ2UiLCAiY29sb3IiXSwKICAgICAgaHRtbDM6ICI8Yi1jb250YWluZXIgZmx1aWQ+XG4gIDxiLXJvdyBjbGFzcz1cIm15LTFcIj5cbiAgICA8Yi1jb2wgc209XCIyXCI+XG4gICAgICA8bGFiZWwgZm9yPVwiaW5wdXQtc21hbGxcIj5TbWFsbDo8L2xhYmVsPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIHNtPVwiMTBcIj5cbiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9XCJpbnB1dC1zbWFsbFwiIHNpemU9XCJzbVwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgeW91ciBuYW1lXCI+PC9iLWZvcm0taW5wdXQ+XG4gICAgPC9iLWNvbD5cbiAgPC9iLXJvdz5cblxuICA8Yi1yb3cgY2xhc3M9XCJteS0xXCI+XG4gICAgPGItY29sIHNtPVwiMlwiPlxuICAgICAgPGxhYmVsIGZvcj1cImlucHV0LWRlZmF1bHRcIj5EZWZhdWx0OjwvbGFiZWw+XG4gICAgPC9iLWNvbD5cbiAgICA8Yi1jb2wgc209XCIxMFwiPlxuICAgICAgPGItZm9ybS1pbnB1dCBpZD1cImlucHV0LWRlZmF1bHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIHlvdXIgbmFtZVwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93IGNsYXNzPVwibXktMVwiPlxuICAgIDxiLWNvbCBzbT1cIjJcIj5cbiAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dC1sYXJnZVwiPkxhcmdlOjwvbGFiZWw+XG4gICAgPC9iLWNvbD5cbiAgICA8Yi1jb2wgc209XCIxMFwiPlxuICAgICAgPGItZm9ybS1pbnB1dCBpZD1cImlucHV0LWxhcmdlXCIgc2l6ZT1cImxnXCIgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIG5hbWVcIj48L2ItZm9ybS1pbnB1dD5cbiAgICA8L2ItY29sPlxuICA8L2Itcm93PlxuPC9iLWNvbnRhaW5lcj4iLAogICAgICBodG1sNDogIjxiLWNvbnRhaW5lciBmbHVpZD5cbiAgPGItcm93IGNsYXNzPVwibXktMVwiPlxuICAgIDxiLWNvbCBzbT1cIjNcIj5cbiAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dC1ub25lXCI+Tm8gU3RhdGU6PC9sYWJlbD5cbiAgICA8L2ItY29sPlxuICAgIDxiLWNvbCBzbT1cIjlcIj5cbiAgICAgIDxiLWZvcm0taW5wdXQgaWQ9XCJpbnB1dC1ub25lXCIgOnN0YXRlPVwibnVsbFwiIHBsYWNlaG9sZGVyPVwiTm8gdmFsaWRhdGlvblwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93IGNsYXNzPVwibXktMVwiPlxuICAgIDxiLWNvbCBzbT1cIjNcIj5cbiAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dC12YWxpZFwiPlZhbGlkIFN0YXRlOjwvbGFiZWw+XG4gICAgPC9iLWNvbD5cbiAgICA8Yi1jb2wgc209XCI5XCI+XG4gICAgICA8Yi1mb3JtLWlucHV0IGlkPVwiaW5wdXQtdmFsaWRcIiA6c3RhdGU9XCJ0cnVlXCIgcGxhY2Vob2xkZXI9XCJWYWxpZCBpbnB1dFwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDwvYi1jb2w+XG4gIDwvYi1yb3c+XG5cbiAgPGItcm93IGNsYXNzPVwibXktMVwiPlxuICAgIDxiLWNvbCBzbT1cIjNcIj5cbiAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dC1pbnZhbGlkXCI+SW52YWxpZCBTdGF0ZTo8L2xhYmVsPlxuICAgIDwvYi1jb2w+XG4gICAgPGItY29sIHNtPVwiOVwiPlxuICAgICAgPGItZm9ybS1pbnB1dCBpZD1cImlucHV0LWludmFsaWRcIiA6c3RhdGU9XCJmYWxzZVwiIHBsYWNlaG9sZGVyPVwiSW52YWxpZCBpbnB1dFwiPjwvYi1mb3JtLWlucHV0PlxuICAgIDwvYi1jb2w+XG4gIDwvYi1yb3c+XG48L2ItY29udGFpbmVyPiIsCiAgICAgIGh0bWw1OiAiPGRpdiByb2xlPVwiZ3JvdXBcIj5cbiAgICA8bGFiZWwgZm9yPVwiaW5wdXQtbGl2ZVwiPk5hbWU6PC9sYWJlbD5cbiAgICA8Yi1mb3JtLWlucHV0XG4gICAgICBpZD1cImlucHV0LWxpdmVcIlxuICAgICAgdi1tb2RlbD1cIm5hbWVcIlxuICAgICAgOnN0YXRlPVwibmFtZVN0YXRlXCJcbiAgICAgIGFyaWEtZGVzY3JpYmVkYnk9XCJpbnB1dC1saXZlLWhlbHAgaW5wdXQtbGl2ZS1mZWVkYmFja1wiXG4gICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHlvdXIgbmFtZVwiXG4gICAgICB0cmltXG4gICAgPjwvYi1mb3JtLWlucHV0PlxuXG4gICAgPCEtLSBUaGlzIHdpbGwgb25seSBiZSBzaG93biBpZiB0aGUgcHJlY2VkaW5nIGlucHV0IGhhcyBhbiBpbnZhbGlkIHN0YXRlIC0tPlxuICAgIDxiLWZvcm0taW52YWxpZC1mZWVkYmFjayBpZD1cImlucHV0LWxpdmUtZmVlZGJhY2tcIj5cbiAgICAgIEVudGVyIGF0IGxlYXN0IDMgbGV0dGVyc1xuICAgIDwvYi1mb3JtLWludmFsaWQtZmVlZGJhY2s+XG5cbiAgICA8IS0tIFRoaXMgaXMgYSBmb3JtIHRleHQgYmxvY2sgKGZvcm1lcmx5IGtub3duIGFzIGhlbHAgYmxvY2spIC0tPlxuICAgIDxiLWZvcm0tdGV4dCBpZD1cImlucHV0LWxpdmUtaGVscFwiPllvdXIgZnVsbCBuYW1lLjwvYi1mb3JtLXRleHQ+XG4gIDwvZGl2PiIsCiAgICAgIGpzNTogImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb21wdXRlZDoge1xuICAgICAgbmFtZVN0YXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lLmxlbmd0aCA+IDIgPyB0cnVlIDogZmFsc2VcbiAgICAgIH1cbiAgICB9LFxuICAgIGRhdGEoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiAnJ1xuICAgICAgfVxuICAgIH1cbiAgfSIsCiAgICAgIG5hbWU6ICIiCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgS1RDb2RlUHJldmlldzogS1RDb2RlUHJldmlldwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5hbWVTdGF0ZTogZnVuY3Rpb24gbmFtZVN0YXRlKCkgewogICAgICByZXR1cm4gdGhpcy5uYW1lLmxlbmd0aCA+IDI7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goU0VUX0JSRUFEQ1JVTUIsIFt7CiAgICAgIHRpdGxlOiAiVnVlIEJvb3RzdHJhcCIsCiAgICAgIHJvdXRlOiAiYWxlcnQiCiAgICB9LCB7CiAgICAgIHRpdGxlOiAiRm9ybSBJbnB1dCIKICAgIH1dKTsKICB9Cn07"},{"version":3,"sources":["FormInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA,OAAA,aAAA,MAAA,0CAAA;AACA,SAAA,cAAA,QAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,wJADA;AAKA,MAAA,GAAA,yFALA;AAYA,MAAA,IAAA,EAAA,EAZA;AAcA,MAAA,KAAA,EACA,0BACA,8DADA,GAEA,wBAFA,GAGA,iEAHA,GAIA,kBAJA,GAKA,wBALA,GAMA,2EANA,GAOA,kBAPA,GAQA,gBARA,GASA,kBAxBA;AAyBA,MAAA,GAAA,wSAzBA;AA2CA,MAAA,KAAA,EAAA,CACA,MADA,EAEA,UAFA,EAGA,OAHA,EAIA,QAJA,EAKA,KALA,EAMA,KANA,EAOA,MAPA,UASA,OATA,EAUA,OAVA,CA3CA;AAwDA,MAAA,KAAA,izBAxDA;AAqFA,MAAA,KAAA,40BArFA;AAkHA,MAAA,KAAA,spBAlHA;AAqIA,MAAA,GAAA,oMArIA;AAiJA,MAAA,IAAA,EAAA;AAjJA,KAAA;AAmJA,GArJA;AAsJA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAtJA;AAyJA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA;AAHA,GAzJA;AA8JA,EAAA,OA9JA,qBA8JA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,CACA;AAAA,MAAA,KAAA,EAAA,eAAA;AAAA,MAAA,KAAA,EAAA;AAAA,KADA,EAEA;AAAA,MAAA,KAAA,EAAA;AAAA,KAFA,CAAA;AAIA;AAnKA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert show variant=\"light\" class=\"alert alert-elevate\">\r\n      <div class=\"alert-icon\">\r\n        <i class=\"flaticon-warning kt-font-brand\"></i>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Textual and Value inputs</b> Create various type inputs such as:\r\n        text, password, number, url, email, search, range, date and more.\r\n        <a\r\n          class=\"kt-link kt-link--brand kt-font-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/form-input\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Textual and Value inputs'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-input\r\n                v-model=\"text\"\r\n                placeholder=\"Enter your name\"\r\n              ></b-form-input>\r\n              <div class=\"mt-2\">Value: {{ text }}</div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html1 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js1 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Input type'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>&lt;b-form-input&gt;</code> defaults to a text input, but\r\n              you can set the <code>type</code> prop to one of the supported\r\n              native browser HTML5 types: <code>text</code>,\r\n              <code>password</code>, <code>email</code>, <code>number</code>,\r\n              <code>url</code>, <code>tel</code>, <code>search</code>,\r\n              <code>date</code>, <code>datetime</code>,\r\n              <code>datetime-local</code>, <code>month</code>,\r\n              <code>week</code>, <code>time</code>, <code>range</code>, or\r\n              <code>color</code>.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\r\n                <b-col sm=\"3\">\r\n                  <label :for=\"`type-${type}`\">Type {{ type }}:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    :id=\"`type-${type}`\"\r\n                    :type=\"type\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html2 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js2 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Control sizing'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Set heights using the <code>size</code> prop to <code>sm</code> or\r\n              <code>lg</code> for small or large respectively.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-small\">Small:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-small\"\r\n                    size=\"sm\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-default\">Default:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-default\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"2\">\r\n                  <label for=\"input-large\">Large:</label>\r\n                </b-col>\r\n                <b-col sm=\"10\">\r\n                  <b-form-input\r\n                    id=\"input-large\"\r\n                    size=\"lg\"\r\n                    placeholder=\"Enter your name\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html3 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Bootstrap includes validation styles for <code>valid</code> and\r\n              <code>invalid</code> states on most form controls.\r\n            </p>\r\n            <b-container fluid>\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-none\">No State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-none\"\r\n                    :state=\"null\"\r\n                    placeholder=\"No validation\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-valid\">Valid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-valid\"\r\n                    :state=\"true\"\r\n                    placeholder=\"Valid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n\r\n              <b-row class=\"my-1\">\r\n                <b-col sm=\"3\">\r\n                  <label for=\"input-invalid\">Invalid State:</label>\r\n                </b-col>\r\n                <b-col sm=\"9\">\r\n                  <b-form-input\r\n                    id=\"input-invalid\"\r\n                    :state=\"false\"\r\n                    placeholder=\"Invalid input\"\r\n                  ></b-form-input>\r\n                </b-col>\r\n              </b-row>\r\n            </b-container>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html4 }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Contextual states Live Example'\">\r\n          <template v-slot:preview>\r\n            <div role=\"group\">\r\n              <label for=\"input-live\">Name:</label>\r\n              <b-form-input\r\n                id=\"input-live\"\r\n                v-model=\"name\"\r\n                :state=\"nameState\"\r\n                aria-describedby=\"input-live-help input-live-feedback\"\r\n                placeholder=\"Enter your name\"\r\n                trim\r\n              ></b-form-input>\r\n\r\n              <!-- This will only be shown if the preceding input has an invalid state -->\r\n              <b-form-invalid-feedback id=\"input-live-feedback\">\r\n                Enter at least 3 letters\r\n              </b-form-invalid-feedback>\r\n\r\n              <!-- This is a form text block (formerly known as help block) -->\r\n              <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ html5 }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ js5 }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/views/partials/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      html1: `<div>\r\n    <b-form-input v-model=\"text\" placeholder=\"Enter your name\"></b-form-input>\r\n    <div class=\"mt-2\">Value: {{ text }}</div>\r\n  </div>`,\r\n      js1: `export default {\r\n    data() {\r\n      return {\r\n        text: ''\r\n      }\r\n    }\r\n  }`,\r\n      text: \"\",\r\n\r\n      html2:\r\n        \"<b-container fluid>\\n\" +\r\n        '    <b-row class=\"my-1\" v-for=\"type in types\" :key=\"type\">\\n' +\r\n        '      <b-col sm=\"3\">\\n' +\r\n        '        <label :for=\"`type-${type}`\">Type {{ type }}:</label>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        '      <b-col sm=\"9\">\\n' +\r\n        '        <b-form-input :id=\"`type-${type}`\" :type=\"type\"></b-form-input>\\n' +\r\n        \"      </b-col>\\n\" +\r\n        \"    </b-row>\\n\" +\r\n        \"  </b-container>\",\r\n      js2: `export default {\r\n    data() {\r\n      return {\r\n        types: [\r\n          'text',\r\n          'password',\r\n          'email',\r\n          'number',\r\n          'url',\r\n          'tel',\r\n          'date',\r\n          \\`time\\`,\r\n          'range',\r\n          'color'\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n      types: [\r\n        \"text\",\r\n        \"password\",\r\n        \"email\",\r\n        \"number\",\r\n        \"url\",\r\n        \"tel\",\r\n        \"date\",\r\n        `time`,\r\n        \"range\",\r\n        \"color\"\r\n      ],\r\n\r\n      html3: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-small\">Small:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-small\" size=\"sm\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-default\">Default:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-default\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"2\">\r\n      <label for=\"input-large\">Large:</label>\r\n    </b-col>\r\n    <b-col sm=\"10\">\r\n      <b-form-input id=\"input-large\" size=\"lg\" placeholder=\"Enter your name\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html4: `<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-none\">No State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-none\" :state=\"null\" placeholder=\"No validation\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-valid\">Valid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-valid\" :state=\"true\" placeholder=\"Valid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n\r\n  <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n      <label for=\"input-invalid\">Invalid State:</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-input id=\"input-invalid\" :state=\"false\" placeholder=\"Invalid input\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n</b-container>`,\r\n\r\n      html5: `<div role=\"group\">\r\n    <label for=\"input-live\">Name:</label>\r\n    <b-form-input\r\n      id=\"input-live\"\r\n      v-model=\"name\"\r\n      :state=\"nameState\"\r\n      aria-describedby=\"input-live-help input-live-feedback\"\r\n      placeholder=\"Enter your name\"\r\n      trim\r\n    ></b-form-input>\r\n\r\n    <!-- This will only be shown if the preceding input has an invalid state -->\r\n    <b-form-invalid-feedback id=\"input-live-feedback\">\r\n      Enter at least 3 letters\r\n    </b-form-invalid-feedback>\r\n\r\n    <!-- This is a form text block (formerly known as help block) -->\r\n    <b-form-text id=\"input-live-help\">Your full name.</b-form-text>\r\n  </div>`,\r\n      js5: `export default {\r\n    computed: {\r\n      nameState() {\r\n        return this.name.length > 2 ? true : false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        name: ''\r\n      }\r\n    }\r\n  }`,\r\n      name: \"\"\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  computed: {\r\n    nameState() {\r\n      return this.name.length > 2;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Form Input\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/pages/vue-bootstrap"}]}