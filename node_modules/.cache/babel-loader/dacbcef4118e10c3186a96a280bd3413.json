{"remainingRequest":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/babel-loader/lib/index.js!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-svg-inline-loader/dist/index.min.js!/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/src/views/pages/vue-bootstrap/FormCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/src/views/pages/vue-bootstrap/FormCheckbox.vue","mtime":1581642016000},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/babel-loader/lib/index.js","mtime":1587476708600},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vuetify-loader/lib/loader.js","mtime":1588922639593},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-loader/lib/index.js","mtime":1588841263729},{"path":"/Users/davislin/DavisLin/Case/metronic_v6.1.8/theme/vue/demo1/node_modules/vue-svg-inline-loader/dist/index.min.js","mtime":1588922639533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FormCheckbox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-alert show variant=\"light\" class=\"alert alert-elevate\">\r\n      <div class=\"alert-icon\">\r\n        <i class=\"flaticon-warning kt-font-brand\"></i>\r\n      </div>\r\n      <div class=\"alert-text\">\r\n        <b>Form Checkbox Inputs</b> For cross browser consistency,\r\n        &lt;b-form-checkbox-group&gt; and &lt;b-form-checkbox&gt; use\r\n        Bootstrap's custom checkbox input to replace the browser default\r\n        checkbox input. It is built on top of semantic and accessible markup, so\r\n        it is a solid replacement for the default checkbox input.\r\n        <a\r\n          class=\"kt-link kt-link--brand kt-font-bold\"\r\n          href=\"https://bootstrap-vue.js.org/docs/components/form-checkbox\"\r\n          target=\"_blank\"\r\n        >\r\n          See documentation.\r\n        </a>\r\n      </div>\r\n    </b-alert>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Single checkbox'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-checkbox\r\n                id=\"checkbox-1\"\r\n                v-model=\"status\"\r\n                name=\"checkbox-1\"\r\n                value=\"accepted\"\r\n                unchecked-value=\"not_accepted\"\r\n              >\r\n                I accept the terms and use\r\n              </b-form-checkbox>\r\n\r\n              <div class=\"mt-3\">\r\n                State: <strong>{{ status }}</strong>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code1.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code1.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Multiple choice checkboxes'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-group label=\"Using options array:\">\r\n                <b-form-checkbox-group\r\n                  id=\"checkbox-group-1\"\r\n                  v-model=\"code2.selected1\"\r\n                  :options=\"code2.options\"\r\n                  name=\"flavour-1\"\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <div class=\"mb-5\">\r\n                Selected: <strong>{{ code2.selected1 }}</strong>\r\n              </div>\r\n\r\n              <b-form-group label=\"Using sub-components:\">\r\n                <b-form-checkbox-group\r\n                  id=\"checkbox-group-2\"\r\n                  v-model=\"code2.selected2\"\r\n                  name=\"flavour-2\"\r\n                >\r\n                  <b-form-checkbox value=\"orange\">Orange</b-form-checkbox>\r\n                  <b-form-checkbox value=\"apple\">Apple</b-form-checkbox>\r\n                  <b-form-checkbox value=\"pineapple\">Pineapple</b-form-checkbox>\r\n                  <b-form-checkbox value=\"grape\">Grape</b-form-checkbox>\r\n                </b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <div>\r\n                Selected: <strong>{{ code2.selected2 }}</strong>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code2.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code2.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Inline and stacked checkboxes'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              <code>&lt;b-form-checkbox-group&gt;</code> components render\r\n              inline checkboxes by default, while\r\n              <code>&lt;b-form-checkbox&gt;</code> renders block-level (stacked)\r\n              checkboxes.\r\n            </p>\r\n            <div>\r\n              <b-form-group\r\n                label=\"Form-checkbox-group inline checkboxes (default)\"\r\n              >\r\n                <b-form-checkbox-group\r\n                  v-model=\"code3.selected1\"\r\n                  :options=\"code3.options\"\r\n                  name=\"flavour-1a\"\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <b-form-group label=\"Form-checkbox-group stacked checkboxes\">\r\n                <b-form-checkbox-group\r\n                  v-model=\"code3.selected2\"\r\n                  :options=\"code3.options\"\r\n                  name=\"flavour-2a\"\r\n                  stacked\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <b-form-group label=\"Individual stacked checkboxes (default)\">\r\n                <b-form-checkbox\r\n                  v-for=\"option in code3.options\"\r\n                  v-model=\"code3.selected3\"\r\n                  :key=\"option.value\"\r\n                  :value=\"option.value\"\r\n                  name=\"flavour-3a\"\r\n                >\r\n                  {{ option.text }}\r\n                </b-form-checkbox>\r\n              </b-form-group>\r\n\r\n              <b-form-group label=\"Individual inline checkboxes\">\r\n                <b-form-checkbox\r\n                  v-for=\"option in code3.options\"\r\n                  v-model=\"code3.selected4\"\r\n                  :key=\"option.value\"\r\n                  :value=\"option.value\"\r\n                  name=\"flavour-4a\"\r\n                  inline\r\n                >\r\n                  {{ option.text }}\r\n                </b-form-checkbox>\r\n              </b-form-group>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code3.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code3.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <KTCodePreview v-bind:title=\"'Control sizing'\">\r\n          <template v-slot:preview>\r\n            <p>\r\n              Use the <code>size</code> prop to control the size of the\r\n              checkbox. The default size is medium. Supported size values are\r\n              <code>sm</code> (small) and <code>lg</code> (large).\r\n            </p>\r\n            <div>\r\n              <b-form-checkbox size=\"sm\">Small</b-form-checkbox>\r\n              <b-form-checkbox>Default</b-form-checkbox>\r\n              <b-form-checkbox size=\"lg\">Large</b-form-checkbox>\r\n            </div>\r\n          </template>\r\n          <template v-slot:code>\r\n            <highlight-code lang=\"html\">\r\n              {{ code4.html }}\r\n            </highlight-code>\r\n          </template>\r\n        </KTCodePreview>\r\n\r\n        <KTCodePreview v-bind:title=\"'Grouped button style checkboxes'\">\r\n          <template v-slot:preview>\r\n            <div>\r\n              <b-form-group label=\"Button-group style checkboxes\">\r\n                <b-form-checkbox-group\r\n                  v-model=\"code5.selected1\"\r\n                  :options=\"code5.options\"\r\n                  name=\"buttons-1\"\r\n                  buttons\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <b-form-group\r\n                label=\"Button-group style checkboxes with variant primary and large buttons\"\r\n              >\r\n                <b-form-checkbox-group\r\n                  v-model=\"code5.selected2\"\r\n                  :options=\"code5.options\"\r\n                  buttons\r\n                  button-variant=\"primary\"\r\n                  size=\"lg\"\r\n                  name=\"buttons-2\"\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n\r\n              <b-form-group\r\n                label=\"Stacked (vertical) button-group style checkboxes\"\r\n              >\r\n                <b-form-checkbox-group\r\n                  v-model=\"code5.selected3\"\r\n                  :options=\"code5.options\"\r\n                  stacked\r\n                  buttons\r\n                ></b-form-checkbox-group>\r\n              </b-form-group>\r\n            </div>\r\n          </template>\r\n          <template v-slot:html>\r\n            {{ code5.html }}\r\n          </template>\r\n          <template v-slot:js>\r\n            {{ code5.js }}\r\n          </template>\r\n        </KTCodePreview>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport KTCodePreview from \"@/views/partials/content/CodePreview.vue\";\r\nimport { SET_BREADCRUMB } from \"@/store/breadcrumbs.module\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      code1: {\r\n        html: `<div>\r\n    <b-form-checkbox\r\n      id=\"checkbox-1\"\r\n      v-model=\"status\"\r\n      name=\"checkbox-1\"\r\n      value=\"accepted\"\r\n      unchecked-value=\"not_accepted\"\r\n    >\r\n      I accept the terms and use\r\n    </b-form-checkbox>\r\n\r\n    <div>State: <strong>{{ status }}</strong></div>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        status: 'not_accepted'\r\n      }\r\n    }\r\n  }`\r\n      },\r\n      status: \"not_accepted\",\r\n\r\n      code2: {\r\n        html: `<div>\r\n    <b-form-group label=\"Using options array:\">\r\n      <b-form-checkbox-group\r\n        id=\"checkbox-group-1\"\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        name=\"flavour-1\"\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Using sub-components:\">\r\n      <b-form-checkbox-group id=\"checkbox-group-2\" v-model=\"selected\" name=\"flavour-2\">\r\n        <b-form-checkbox value=\"orange\">Orange</b-form-checkbox>\r\n        <b-form-checkbox value=\"apple\">Apple</b-form-checkbox>\r\n        <b-form-checkbox value=\"pineapple\">Pineapple</b-form-checkbox>\r\n        <b-form-checkbox value=\"grape\">Grape</b-form-checkbox>\r\n      </b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <div>Selected: <strong>{{ selected }}</strong></div>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        selected: [], // Must be an array reference!\r\n        options: [\r\n          { text: 'Orange', value: 'orange' },\r\n          { text: 'Apple', value: 'apple' },\r\n          { text: 'Pineapple', value: 'pineapple' },\r\n          { text: 'Grape', value: 'grape' }\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n        selected1: [], // Must be an array reference!\r\n        selected2: [], // Must be an array reference!\r\n        options: [\r\n          { text: \"Orange\", value: \"orange\" },\r\n          { text: \"Apple\", value: \"apple\" },\r\n          { text: \"Pineapple\", value: \"pineapple\" },\r\n          { text: \"Grape\", value: \"grape\" }\r\n        ]\r\n      },\r\n\r\n      code3: {\r\n        html: `<div>\r\n    <b-form-group label=\"Form-checkbox-group inline checkboxes (default)\">\r\n      <b-form-checkbox-group\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        name=\"flavour-1a\"\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Form-checkbox-group stacked checkboxes\">\r\n      <b-form-checkbox-group\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        name=\"flavour-2a\"\r\n        stacked\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Individual stacked checkboxes (default)\">\r\n      <b-form-checkbox\r\n        v-for=\"option in options\"\r\n        v-model=\"selected\"\r\n        :key=\"option.value\"\r\n        :value=\"option.value\"\r\n        name=\"flavour-3a\"\r\n      >\r\n        {{ option.text }}\r\n      </b-form-checkbox>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Individual inline checkboxes\">\r\n      <b-form-checkbox\r\n        v-for=\"option in options\"\r\n        v-model=\"selected\"\r\n        :key=\"option.value\"\r\n        :value=\"option.value\"\r\n        name=\"flavour-4a\"\r\n        inline\r\n      >\r\n        {{ option.text }}\r\n      </b-form-checkbox>\r\n    </b-form-group>\r\n  </div>`,\r\n        js: `export default {\r\n    data() {\r\n      return {\r\n        selected: [], // Must be an array reference!\r\n        options: [\r\n          { text: 'Orange', value: 'orange' },\r\n          { text: 'Apple', value: 'apple' },\r\n          { text: 'Pineapple', value: 'pineapple' },\r\n          { text: 'Grape', value: 'grape' }\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n        selected1: [], // Must be an array reference!\r\n        selected2: [], // Must be an array reference!\r\n        selected3: [], // Must be an array reference!\r\n        selected4: [], // Must be an array reference!\r\n        options: [\r\n          { text: \"Orange\", value: \"orange\" },\r\n          { text: \"Apple\", value: \"apple\" },\r\n          { text: \"Pineapple\", value: \"pineapple\" },\r\n          { text: \"Grape\", value: \"grape\" }\r\n        ]\r\n      },\r\n\r\n      code4: {\r\n        html: `<div>\r\n  <b-form-checkbox size=\"sm\">Small</b-form-checkbox>\r\n  <b-form-checkbox>Default</b-form-checkbox>\r\n  <b-form-checkbox size=\"lg\">Large</b-form-checkbox>\r\n</div>`\r\n      },\r\n\r\n      code5: {\r\n        html: `<div>\r\n    <b-form-group label=\"Button-group style checkboxes\">\r\n      <b-form-checkbox-group\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        name=\"buttons-1\"\r\n        buttons\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Button-group style checkboxes with variant primary and large buttons\">\r\n      <b-form-checkbox-group\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        buttons\r\n        button-variant=\"primary\"\r\n        size=\"lg\"\r\n        name=\"buttons-2\"\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n\r\n    <b-form-group label=\"Stacked (vertical) button-group style checkboxes\">\r\n      <b-form-checkbox-group\r\n        v-model=\"selected\"\r\n        :options=\"options\"\r\n        stacked\r\n        buttons\r\n      ></b-form-checkbox-group>\r\n    </b-form-group>\r\n  </div>`,\r\n        js: `\r\n  export default {\r\n    data() {\r\n      return {\r\n        selected: [], // Must be an array reference!\r\n        options: [\r\n          { text: 'Orange', value: 'orange' },\r\n          { text: 'Apple', value: 'apple' },\r\n          { text: 'Pineapple', value: 'pineapple' },\r\n          { text: 'Grape', value: 'grape' }\r\n        ]\r\n      }\r\n    }\r\n  }`,\r\n        selected1: [], // Must be an array reference!\r\n        selected2: [], // Must be an array reference!\r\n        selected3: [], // Must be an array reference!\r\n        options: [\r\n          { text: \"Orange\", value: \"orange\" },\r\n          { text: \"Apple\", value: \"apple\" },\r\n          { text: \"Pineapple\", value: \"pineapple\" },\r\n          { text: \"Grape\", value: \"grape\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    KTCodePreview\r\n  },\r\n  mounted() {\r\n    this.$store.dispatch(SET_BREADCRUMB, [\r\n      { title: \"Vue Bootstrap\", route: \"alert\" },\r\n      { title: \"Form Checkbox\" }\r\n    ]);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/pages/vue-bootstrap"}]}