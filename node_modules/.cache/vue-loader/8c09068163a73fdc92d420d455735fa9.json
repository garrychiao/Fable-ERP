{"remainingRequest":"/Users/davislin/DavisLin/Case/erp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/davislin/DavisLin/Case/erp/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/davislin/DavisLin/Case/erp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davislin/DavisLin/Case/erp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davislin/DavisLin/Case/erp/node_modules/vue-svg-inline-loader/dist/index.min.js!/Users/davislin/DavisLin/Case/erp/src/views/partials/layout/StickyToolbar.vue?vue&type=template&id=33260d80&","dependencies":[{"path":"/Users/davislin/DavisLin/Case/erp/src/views/partials/layout/StickyToolbar.vue","mtime":1581158162000},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1588841263729},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/vuetify-loader/lib/loader.js","mtime":1588922639593},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/cache-loader/dist/cjs.js","mtime":1581314282653},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/vue-loader/lib/index.js","mtime":1588841263729},{"path":"/Users/davislin/DavisLin/Case/erp/node_modules/vue-svg-inline-loader/dist/index.min.js","mtime":1588922639533}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygKICAgICAgInVsIiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOiAia3Qtc3RpY2t5LXRvb2xiYXIiLAogICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tdG9wIjogIjMwcHgiIH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKAogICAgICAgICAgImxpIiwKICAgICAgICAgIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJiLXRvb2x0aXAiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtYi10b29sdGlwLmhvdmVyLmxlZnQiLAogICAgICAgICAgICAgICAgdmFsdWU6ICJNb3JlIGRlbW9zIiwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICInTW9yZSBkZW1vcyciLAogICAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7IGhvdmVyOiB0cnVlLCBsZWZ0OiB0cnVlIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJrdC1zdGlja3ktdG9vbGJhcl9faXRlbSBrdC1zdGlja3ktdG9vbGJhcl9faXRlbS0tc3VjY2VzcyIsCiAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAia3RfZGVtb19wYW5lbF90b2dnbGUiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl9tKDApXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAibGkiLAogICAgICAgICAgewogICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogImItdG9vbHRpcCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1iLXRvb2x0aXAuaG92ZXIubGVmdCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogIkxheW91dCBidWlsZGVyIiwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICInTGF5b3V0IGJ1aWxkZXInIiwKICAgICAgICAgICAgICAgIG1vZGlmaWVyczogeyBob3ZlcjogdHJ1ZSwgbGVmdDogdHJ1ZSB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAia3Qtc3RpY2t5LXRvb2xiYXJfX2l0ZW0ga3Qtc3RpY2t5LXRvb2xiYXJfX2l0ZW0tLWJyYW5kIgogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICIjIiwgdG86IHsgbmFtZTogImJ1aWxkZXIiIH0gfSB9LAogICAgICAgICAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmbGF0aWNvbjItZ2VhciIgfSldCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJsaSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAiYi10b29sdGlwIiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LWItdG9vbHRpcC5ob3Zlci5sZWZ0IiwKICAgICAgICAgICAgICAgIHZhbHVlOiAiRG9jdW1lbnRhdGlvbiIsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiJ0RvY3VtZW50YXRpb24nIiwKICAgICAgICAgICAgICAgIG1vZGlmaWVyczogeyBob3ZlcjogdHJ1ZSwgbGVmdDogdHJ1ZSB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAia3Qtc3RpY2t5LXRvb2xiYXJfX2l0ZW0ga3Qtc3RpY2t5LXRvb2xiYXJfX2l0ZW0tLXdhcm5pbmciCiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fbSgxKV0KICAgICAgICApCiAgICAgIF0KICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICByZWY6ICJrdF9kZW1vX3BhbmVsIiwKICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWwiLAogICAgICAgIGF0dHJzOiB7IGlkOiAia3RfZGVtb19wYW5lbCIgfQogICAgICB9LAogICAgICBbCiAgICAgICAgX3ZtLl9tKDIpLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9fYm9keSBrdC1zY3JvbGwiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbSIsCiAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICJrdC1kZW1vLXBhbmVsX19pdGVtLS1hY3RpdmUiOiBfdm0uaXNBY3RpdmVEZW1vKCJkZW1vMSIpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBEZW1vMSAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSgzKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW8yIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMiAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg0KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW8zIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMyAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg1KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW80IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gNCAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg2KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW81IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gNSAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg3KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW82IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gNiAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg4KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW83IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gNyAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSg5KQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtIiwKICAgICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgICAgImt0LWRlbW8tcGFuZWxfX2l0ZW0tLWFjdGl2ZSI6IF92bS5pc0FjdGl2ZURlbW8oImRlbW84IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gOCAiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF92bS5fbSgxMCkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbSIsCiAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICJrdC1kZW1vLXBhbmVsX19pdGVtLS1hY3RpdmUiOiBfdm0uaXNBY3RpdmVEZW1vKCJkZW1vOSIpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBEZW1vIDkgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTEpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9faXRlbS0tYWN0aXZlIjogX3ZtLmlzQWN0aXZlRGVtbygiZGVtbzEwIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMTAgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTIpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9faXRlbS0tYWN0aXZlIjogX3ZtLmlzQWN0aXZlRGVtbygiZGVtbzExIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMTEgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTMpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9faXRlbS0tYWN0aXZlIjogX3ZtLmlzQWN0aXZlRGVtbygiZGVtbzEyIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMTIgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTQpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9faXRlbS0tYWN0aXZlIjogX3ZtLmlzQWN0aXZlRGVtbygiZGVtbzEzIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMTMgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTUpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0iLAogICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9faXRlbS0tYWN0aXZlIjogX3ZtLmlzQWN0aXZlRGVtbygiZGVtbzE0IikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIERlbW8gMTQgIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uX20oMTYpCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAia3QtZGVtby1wYW5lbF9fcHVyY2hhc2UgYnRuIGJ0bi1icmFuZCBidG4tZWxldmF0ZSBidG4tYm9sZCBidG4tdXBwZXIiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOgogICAgICAgICAgICAgICAgICAiaHR0cHM6Ly90aGVtZWZvcmVzdC5uZXQvaXRlbS9tZXRyb25pYy1yZXNwb25zaXZlLWFkbWluLWRhc2hib2FyZC10ZW1wbGF0ZS80MDIxNDY5P3JlZj1rZWVudGhlbWVzIiwKICAgICAgICAgICAgICAgIHRhcmdldDogIl9ibGFuayIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiBCdXkgTWV0cm9uaWMgTm93ISAiKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdCiAgICApCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmxhdGljb24yLWRyb3AiIH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGhyZWY6ICJodHRwczovL2tlZW50aGVtZXMuY29tL21ldHJvbmljLz9wYWdlPWRvY3MiLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIgogICAgICAgIH0KICAgICAgfSwKICAgICAgW19jKCJpIiwgeyBzdGF0aWNDbGFzczogImZsYXRpY29uMi10ZWxlZ3JhbS1sb2dvIiB9KV0KICAgICkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19oZWFkIiB9LCBbCiAgICAgIF9jKCJoMyIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX190aXRsZSIgfSwgWwogICAgICAgIF92bS5fdigiIFNlbGVjdCBBIERlbW8gIikKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJhIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2Nsb3NlIiwKICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiwgaWQ6ICJrdF9kZW1vX3BhbmVsX2Nsb3NlIiB9CiAgICAgICAgfSwKICAgICAgICBbX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmxhdGljb24yLWRlbGV0ZSIgfSldCiAgICAgICkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbWVkaWEvZGVtb3MvcHJldmlldy9kZW1vMS5qcGciKSwKICAgICAgICAgIGFsdDogIiIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tcHJldmlldy1vdmVybGF5IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1icmFuZCBidG4tZWxldmF0ZSIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICJodHRwczovL2tlZW50aGVtZXMuY29tL21ldHJvbmljL3ByZXZpZXcvdnVlL2RlbW8xIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIFByZXZpZXcgIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW8yLmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW8zLmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW80LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW81LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW82LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW83LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW84LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW85LmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW8xMC5qcGciKSwKICAgICAgICAgIGFsdDogIiIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tcHJldmlldy1vdmVybGF5IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1icmFuZCBidG4tZWxldmF0ZSBkaXNhYmxlZCIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIENvbWluZyBzb29uICIpXQogICAgICAgICkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbWVkaWEvZGVtb3MvcHJldmlldy9kZW1vMTEuanBnIiksCiAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXctb3ZlcmxheSIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tYnJhbmQgYnRuLWVsZXZhdGUgZGlzYWJsZWQiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIyIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiBDb21pbmcgc29vbiAiKV0KICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tcHJldmlldyIgfSwgWwogICAgICBfYygiaW1nIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL21lZGlhL2RlbW9zL3ByZXZpZXcvZGVtbzEyLmpwZyIpLAogICAgICAgICAgYWx0OiAiIgogICAgICAgIH0KICAgICAgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3LW92ZXJsYXkiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJhIiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWJyYW5kIGJ0bi1lbGV2YXRlIGRpc2FibGVkIiwKICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCIgQ29taW5nIHNvb24gIildCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXciIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9tZWRpYS9kZW1vcy9wcmV2aWV3L2RlbW8xMy5qcGciKSwKICAgICAgICAgIGFsdDogIiIKICAgICAgICB9CiAgICAgIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImt0LWRlbW8tcGFuZWxfX2l0ZW0tcHJldmlldy1vdmVybGF5IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiYSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1icmFuZCBidG4tZWxldmF0ZSBkaXNhYmxlZCIsCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiIENvbWluZyBzb29uICIpXQogICAgICAgICkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAia3QtZGVtby1wYW5lbF9faXRlbS1wcmV2aWV3IiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvbWVkaWEvZGVtb3MvcHJldmlldy9kZW1vMTQuanBnIiksCiAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJrdC1kZW1vLXBhbmVsX19pdGVtLXByZXZpZXctb3ZlcmxheSIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImEiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tYnJhbmQgYnRuLWVsZXZhdGUgZGlzYWJsZWQiLAogICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIyIgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiBDb21pbmcgc29vbiAiKV0KICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}